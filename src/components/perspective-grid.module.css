:where(.grid) {
  --grid-tile-border-color: var(--gray-8);
  --grid-tile-color: var(--cyan-5);
}

.tile {
  pointer-events: all;
  aspect-ratio: 1 / 1;
  opacity: 0;
  background-color: var(--grid-tile-color);
}

.grid {
  display: grid;
  width: max(100vw, 100vh);
  height: min(100vw, 100vh);
  transform: perspective(800px) scale(1.4501) translate(-50%, -50%)
    rotateX(35deg) translateZ(0); /* GPU 가속 */

  position: fixed;
  top: calc(50% + 30vh);
  left: 50%;
  transition: opacity 300ms;
  transform-origin: bottom left;
  will-change: transform;
  pointer-events: none;
  perspective-origin: 50% 120%; /* 소실점을 아래쪽으로 조정 */
  image-rendering: pixelated; /* 픽셀 기반 렌더링을 강제 */
  overflow: visible;
}

.grid .grid-col {
  position: relative;
  pointer-events: none;
  user-select: none;
}

.grid .grid-col::before,
.grid .grid-col::after {
  background: var(--grid-tile-border-color);
}

.grid .grid-col::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% + 2px);
  height: 1px;
}

.grid .grid-col::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 1px;
  height: calc(100% + 2px);
}

/* grid-row-end */
.grid .grid-row-end::after {
  height: 100%;
}

.grid .grid-row-end::before {
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    var(--grid-tile-border-color) 1px,
    transparent 1px,
    transparent calc(100% - 1px),
    var(--grid-tile-border-color) calc(100% - 1px)
  );
}

/* grid-col-end */
.grid .grid-col-end::after {
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    var(--grid-tile-border-color) 1px,
    transparent 1px,
    transparent calc(100% - 1px),
    var(--grid-tile-border-color) 100%
  );
}
